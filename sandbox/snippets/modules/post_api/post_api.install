<?php

declare(strict_types=1);

use Drupal\Core\Entity\EntityInterface;
use Drupal\node\Entity\Node;
use Drupal\node\Entity\NodeType;
use Drupal\user\Entity\User;

function post_api_install(): void
{
    for ($i = 1; $i <= 5; $i++) {
        $user = User::create([
          'name' => sprintf('user%s', $i),
          'mail' => sprintf('user%s@example.com', $i),
          'status' => 1,
          'roles' => ['authenticated'],
        ]);
        $user->save();
    }

    for ($i = 1; $i <= 100; $i++) {
        $random_users = \Drupal::entityTypeManager()->getStorage('user')
          ->loadByProperties([
            'name' => sprintf('user%s', rand(1, 5)),
          ]);
        /** @var EntityInterface $random_user */
        $random_user = reset($random_users);

        $post = Node::create([
          'type' => 'post',
          'title' => sprintf('Post %s', $i),
          'field_content' => [
            'value' => sprintf('This is content for post #%s', $i),
            'format' => 'basic_html',
          ],
          'uid' => $random_user->id(),
        ]);
        $post->save();
    }
}

function post_api_uninstall(): void
{
    $nodes = \Drupal::entityTypeManager()->getStorage('node')
      ->loadByProperties([
        'type' => 'post'
      ]);
    foreach ($nodes as $node) {
        $node->delete();
    }

    $node_type = NodeType::load('post');
    if ($node_type) {
        $node_type->delete();
    }

    for ($i = 1; $i <= 5; $i++) {
        $users = \Drupal::entityTypeManager()->getStorage('user')
          ->loadByProperties([
            'name' => sprintf('user%s', $i),
          ]);
        $user = $users ? reset($users) : false;
        if ($user) {
            $user->delete();
        }
    }
}
